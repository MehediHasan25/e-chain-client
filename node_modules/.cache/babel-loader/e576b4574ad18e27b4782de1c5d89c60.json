{"ast":null,"code":"var _jsxFileName = \"/home/mehedi/Documents/e-newclient_v-2/e-chain-client/src/Component/Logfile/nidLog.js\";\nimport React, { Component } from 'react';\nimport cookie from \"../utils/cookie\";\nimport \"../css/table.css\";\nimport axios from 'axios';\nimport { getNidLog } from \"../Url/Nid\";\n\nclass nidLog extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: [],\n      fatherName: [],\n      motherName: [],\n      pob: [],\n      dob: [],\n      nidNo: [],\n      bloodGroup: [],\n      issueDate: [],\n      address: [],\n      time: []\n    };\n  }\n\n  getNidChangeMap(state) {\n    let len = state.name.length;\n    let changeMap = [];\n\n    for (let i = 0; i < len; i++) changeMap[i] = [];\n\n    for (let i = 1; i < len; i++) {\n      if (state.name[i - 1] !== state.name[i]) changeMap[i].push(\"name\");\n      if (state.fatherName[i - 1] !== state.fatherName[i]) changeMap[i].push(\"fatherName\");\n      if (state.motherName[i - 1] !== state.motherName[i]) changeMap[i].push(\"motherName\");\n      if (state.pob[i - 1] !== state.pob[i]) changeMap[i].push(\"pob\");\n      if (state.dob[i - 1] !== state.dob[i]) changeMap[i].push(\"dob\");\n      if (state.nidNo[i - 1] !== state.nidNo[i]) changeMap[i].push(\"nidNo\");\n      if (state.bloodGroup[i - 1] !== state.bloodGroup[i]) changeMap[i].push(\"bloodGroup\");\n      if (state.issueDate[i - 1] !== state.issueDate[i]) changeMap[i].push(\"issueDate\");\n      if (state.address[i - 1] !== state.address[i]) changeMap[i].push(\"address\");\n    }\n\n    return changeMap;\n  }\n\n  componentDidMount() {\n    const config = {\n      headers: {\n        \"x-auth-token\": cookie.getCookie(\"x-auth-token\")\n      } ////////////////////////getNidLog\n\n    };\n    axios.get(getNidLog, config).then(res => {\n      console.log(res);\n      const nidData = res.data.nidLog;\n      let name = [];\n      let fatherName = [];\n      let motherName = [];\n      let pob = [];\n      let dob = [];\n      let nidNo = [];\n      let bloodGroup = [];\n      let issueDate = [];\n      let address = [];\n      let time = [];\n\n      for (let i = 0; i < nidData.length; i++) {\n        name.push(nidData[i].nid.name);\n        fatherName.push(nidData[i].nid.fatherName);\n        motherName.push(nidData[i].nid.motherName);\n        pob.push(nidData[i].nid.pob);\n        dob.push(nidData[i].nid.dob);\n        nidNo.push(nidData[i].nid.nidNo);\n        bloodGroup.push(nidData[i].nid.bloodGroup);\n        issueDate.push(nidData[i].nid.issueDate);\n        address.push(nidData[i].nid.address);\n        time.push(nidData[i].unixTime);\n      }\n\n      this.setState({\n        name: name,\n        fatherName: fatherName,\n        motherName: motherName,\n        pob: pob,\n        dob: dob,\n        nidNo: nidNo,\n        bloodGroup: bloodGroup,\n        issueDate: issueDate,\n        address: address,\n        time: time\n      });\n    }).catch(error => {\n      if (error.response) {\n        if (error.response.status === 400 || error.response.status === 401) {\n          console.log(error.response.data);\n          alert(error.response.data.message);\n        } else if (error.response.status === 404) {\n          alert(\"Not Found\");\n        } else if (error.response.status === 500) {\n          alert(error.response.data.message);\n        }\n      } else if (error.request) {\n        console.log(error.request);\n        alert(\"Error Connectiong\");\n      } else {\n        console.log(\"Error\", error.message);\n        alert(error.message);\n      }\n    });\n  }\n\n  render() {\n    let changeMap = this.getNidChangeMap(this.state);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      style: {\n        color: \"#33bfaa\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"NID Log\"), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"DateTime\"), this.state.time.map((value, index) => {\n      let d = new Date(value);\n      return React.createElement(\"th\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, d.toLocaleString());\n    }))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Name\")), this.state.name.map((value, index) => {\n      if (changeMap[index].indexOf(\"name\") === -1) {\n        return React.createElement(\"td\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, value);\n      } else {\n        return React.createElement(\"td\", {\n          key: index,\n          style: {\n            color: \"green\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, value);\n      }\n    })), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Father Name\")), this.state.fatherName.map((value, index) => {\n      if (changeMap[index].indexOf(\"fatherName\") === -1) {\n        return React.createElement(\"td\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, value);\n      } else {\n        return React.createElement(\"td\", {\n          key: index,\n          style: {\n            color: \"green\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, value);\n      }\n    })), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Mother Name\")), this.state.motherName.map((value, index) => {\n      if (changeMap[index].indexOf(\"motherName\") === -1) {\n        return React.createElement(\"td\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, value);\n      } else {\n        return React.createElement(\"td\", {\n          key: index,\n          style: {\n            color: \"green\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, value);\n      }\n    })), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Place of Birth\")), this.state.pob.map((value, index) => {\n      if (changeMap[index].indexOf(\"pob\") === -1) {\n        return React.createElement(\"td\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        }, value);\n      } else {\n        return React.createElement(\"td\", {\n          key: index,\n          style: {\n            color: \"green\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }, value);\n      }\n    })), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Date of Birth\")), this.state.dob.map((value, index) => {\n      if (changeMap[index].indexOf(\"dob\") === -1) {\n        return React.createElement(\"td\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, value);\n      } else {\n        return React.createElement(\"td\", {\n          key: index,\n          style: {\n            color: \"green\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, value);\n      }\n    })), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"NID No\")), this.state.nidNo.map((value, index) => {\n      if (changeMap[index].indexOf(\"nidNo\") === -1) {\n        return React.createElement(\"td\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, value);\n      } else {\n        return React.createElement(\"td\", {\n          key: index,\n          style: {\n            color: \"green\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }, value);\n      }\n    })), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Blood Broup\")), this.state.bloodGroup.map((value, index) => {\n      if (changeMap[index].indexOf(\"bloodGroup\") === -1) {\n        return React.createElement(\"td\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }, value);\n      } else {\n        return React.createElement(\"td\", {\n          key: index,\n          style: {\n            color: \"green\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        }, value);\n      }\n    })), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"Issue Date\")), this.state.issueDate.map((value, index) => {\n      if (changeMap[index].indexOf(\"issueDate\") === -1) {\n        return React.createElement(\"td\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }, value);\n      } else {\n        return React.createElement(\"td\", {\n          key: index,\n          style: {\n            color: \"green\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222\n          },\n          __self: this\n        }, value);\n      }\n    })), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"Address\")), this.state.address.map((value, index) => {\n      if (changeMap[index].indexOf(\"address\") === -1) {\n        return React.createElement(\"td\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, value);\n      } else {\n        return React.createElement(\"td\", {\n          key: index,\n          style: {\n            color: \"green\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        }, value);\n      }\n    })))));\n  }\n\n}\n\nexport default nidLog;","map":{"version":3,"sources":["/home/mehedi/Documents/e-newclient_v-2/e-chain-client/src/Component/Logfile/nidLog.js"],"names":["React","Component","cookie","axios","getNidLog","nidLog","state","name","fatherName","motherName","pob","dob","nidNo","bloodGroup","issueDate","address","time","getNidChangeMap","len","length","changeMap","i","push","componentDidMount","config","headers","getCookie","get","then","res","console","log","nidData","data","nid","unixTime","setState","catch","error","response","status","alert","message","request","render","color","map","value","index","d","Date","toLocaleString","indexOf"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport cookie from \"../utils/cookie\";\nimport \"../css/table.css\";\nimport axios from 'axios';\nimport {getNidLog} from \"../Url/Nid\";\n\n\nclass nidLog extends Component {\n    state = {\n        name: [],\n        fatherName: [],\n        motherName: [],\n        pob: [],\n        dob: [],\n        nidNo: [],\n        bloodGroup: [],\n        issueDate: [],\n        address: [],\n        time: []\n    }\n\n    getNidChangeMap(state) {\n        let len = state.name.length;\n        let changeMap = [];\n        for (let i = 0; i < len; i++) changeMap[i] = [];\n        for (let i = 1; i < len; i++) {\n            if (state.name[i - 1] !== state.name[i]) changeMap[i].push(\"name\");\n            if (state.fatherName[i - 1] !== state.fatherName[i]) changeMap[i].push(\"fatherName\");\n            if (state.motherName[i - 1] !== state.motherName[i]) changeMap[i].push(\"motherName\");\n            if (state.pob[i - 1] !== state.pob[i]) changeMap[i].push(\"pob\");\n            if (state.dob[i - 1] !== state.dob[i]) changeMap[i].push(\"dob\");\n            if (state.nidNo[i - 1] !== state.nidNo[i]) changeMap[i].push(\"nidNo\");\n            if (state.bloodGroup[i - 1] !== state.bloodGroup[i]) changeMap[i].push(\"bloodGroup\");\n            if (state.issueDate[i - 1] !== state.issueDate[i]) changeMap[i].push(\"issueDate\");\n            if (state.address[i - 1] !== state.address[i]) changeMap[i].push(\"address\");\n        }\n        return changeMap;\n    }\n\n\n\n    componentDidMount() {\n\n        const config = {\n            headers: {\n                \"x-auth-token\": cookie.getCookie(\"x-auth-token\")\n            }\n        }\n        ////////////////////////getNidLog\n        axios.get(getNidLog, config)\n            .then(res => {\n                console.log(res);\n                const nidData = res.data.nidLog;\n\n                let name = []; let fatherName = []; let motherName = []; let pob = []; let dob = [];\n                let nidNo = []; let bloodGroup = []; let issueDate = []; let address = []; let time = [];\n\n                for (let i = 0; i < nidData.length; i++) {\n                    name.push(nidData[i].nid.name);\n                    fatherName.push(nidData[i].nid.fatherName);\n                    motherName.push(nidData[i].nid.motherName);\n                    pob.push(nidData[i].nid.pob);\n                    dob.push(nidData[i].nid.dob);\n                    nidNo.push(nidData[i].nid.nidNo);\n                    bloodGroup.push(nidData[i].nid.bloodGroup);\n                    issueDate.push(nidData[i].nid.issueDate);\n                    address.push(nidData[i].nid.address);\n                    time.push(nidData[i].unixTime);\n                }\n                this.setState({\n                    name: name,\n                    fatherName: fatherName,\n                    motherName: motherName,\n                    pob: pob,\n                    dob: dob,\n                    nidNo: nidNo,\n                    bloodGroup: bloodGroup,\n                    issueDate: issueDate,\n                    address: address,\n                    time: time\n                });\n\n\n            })\n            .catch(error => {\n                if (error.response) {\n                    if (error.response.status === 400 || error.response.status === 401) {\n                        console.log(error.response.data);\n                        alert(error.response.data.message);\n                       \n                    }\n                    else if (error.response.status === 404) {\n                        alert(\"Not Found\");\n                    }\n                    else if (error.response.status === 500) {\n                        alert(error.response.data.message);\n                    }\n                }\n                else if(error.request){\n                    console.log(error.request);\n                    alert(\"Error Connectiong\");\n                }\n                else{\n                    console.log(\"Error\", error.message);\n                    alert(error.message);\n                }\n            });\n\n\n    }\n\n\n    render() {\n        let changeMap = this.getNidChangeMap(this.state);\n        return (\n            <div className=\"container\">\n                <h3 style={{ color: \"#33bfaa\" }}>NID Log</h3> \n                <table>\n                    <thead>\n                        <tr>\n                            <th>DateTime</th>\n                            {this.state.time.map((value, index) => {\n                                let d = new Date(value);\n                                return <th key={index}>{d.toLocaleString()}</th>\n                            })}\n                        </tr>\n                    </thead>\n\n                    <tbody>\n                        <tr>\n                            <td><b>Name</b></td>\n                            {this.state.name.map((value, index) => {\n                                if (changeMap[index].indexOf(\"name\") === -1) {\n                                    return <td key={index}>{value}</td>\n                                }\n                                else {\n                                    return <td key={index} style={{ color: \"green\" }}>{value}</td>\n                                }\n\n                            })}\n                        </tr>\n                        <tr>\n                            <td><b>Father Name</b></td>\n                            {this.state.fatherName.map((value, index) => {\n                                if (changeMap[index].indexOf(\"fatherName\") === -1) {\n                                    return <td key={index}>{value}</td>\n                                }\n                                else {\n                                    return <td key={index} style={{ color: \"green\" }}>{value}</td>\n                                }\n\n                            })}\n                        </tr>\n\n                        <tr>\n                            <td><b>Mother Name</b></td>\n                            {this.state.motherName.map((value, index) => {\n                                if (changeMap[index].indexOf(\"motherName\") === -1) {\n                                    return <td key={index}>{value}</td>\n                                }\n                                else {\n                                    return <td key={index} style={{ color: \"green\" }}>{value}</td>\n                                }\n                            })}\n                        </tr>\n\n                        <tr>\n                            <td><b>Place of Birth</b></td>\n                            {this.state.pob.map((value, index) => {\n                                if (changeMap[index].indexOf(\"pob\") === -1) {\n                                    return <td key={index}>{value}</td>\n                                }\n                                else {\n                                    return <td key={index} style={{ color: \"green\" }}>{value}</td>\n                                }\n                            })}\n                        </tr>\n\n                        <tr>\n                            <td><b>Date of Birth</b></td>\n                            {this.state.dob.map((value, index) => {\n                                if (changeMap[index].indexOf(\"dob\") === -1) {\n                                    return <td key={index}>{value}</td>\n                                }\n                                else {\n                                    return <td key={index} style={{ color: \"green\" }}>{value}</td>\n                                }\n                            })}\n                        </tr>\n\n                        <tr>\n                            <td><b>NID No</b></td>\n                            {this.state.nidNo.map((value, index) => {\n                                if (changeMap[index].indexOf(\"nidNo\") === -1) {\n                                    return <td key={index}>{value}</td>\n                                }\n                                else {\n                                    return <td key={index} style={{ color: \"green\" }}>{value}</td>\n                                }\n                            })}\n                        </tr>\n\n                        <tr>\n                            <td><b>Blood Broup</b></td>\n                            {this.state.bloodGroup.map((value, index) => {\n                                if (changeMap[index].indexOf(\"bloodGroup\") === -1) {\n                                    return <td key={index}>{value}</td>\n                                }\n                                else {\n                                    return <td key={index} style={{ color: \"green\" }}>{value}</td>\n                                }\n                            })}\n                        </tr>\n\n                        <tr>\n                            <td><b>Issue Date</b></td>\n                            {this.state.issueDate.map((value, index) => {\n                                if (changeMap[index].indexOf(\"issueDate\") === -1) {\n                                    return <td key={index}>{value}</td>\n                                }\n                                else {\n                                    return <td key={index} style={{ color: \"green\" }}>{value}</td>\n                                }\n                            })}\n                        </tr>\n\n                        <tr>\n                            <td><b>Address</b></td>\n                            {this.state.address.map((value, index) => {\n                                if (changeMap[index].indexOf(\"address\") === -1) {\n                                    return <td key={index}>{value}</td>\n                                }\n                                else {\n                                    return <td key={index} style={{ color: \"green\" }}>{value}</td>\n                                }\n                            })}\n                        </tr>\n                    </tbody>\n\n                </table>\n\n\n            </div>\n        );\n    }\n}\n\nexport default nidLog;\n\n\n"]},"metadata":{},"sourceType":"module"}