{"ast":null,"code":"var _jsxFileName = \"/home/mehedi/Documents/e-newclient_v-2/e-chain-client/src/Component/Password/ChangePassword.js\";\nimport React, { Component } from 'react';\nimport cookie from \"../utils/cookie\";\nimport Images from \"../Images\";\nimport Navbar from \"../Navbar\";\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport { changePassword } from \"../Url/User\";\n\nclass ChangePassword extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      oldPassword: '',\n      oldPasswordValidation: false,\n      newPassword: '',\n      newPasswordValidation: false,\n      confirmPassword: '',\n      confirmPasswordValidation: false\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            oldPassword = _this$state.oldPassword,\n            newPassword = _this$state.newPassword,\n            confirmPassword = _this$state.confirmPassword;\n\n      if (oldPassword === '') {\n        this.getoldPasswordError = \"**old password is empty\";\n        this.setState({\n          oldPasswordValidation: true\n        });\n        return;\n      } else if (oldPassword.length < 8) {\n        this.getoldPasswordError = \"**old password must be 8 characters\";\n        this.setState({\n          oldPasswordValidation: true\n        });\n        return;\n      }\n\n      const username = cookie.getCookie(\"username\");\n\n      if (newPassword === '') {\n        this.getnewPasswordError = \"**new password field is empty\";\n        this.setState({\n          newPasswordValidation: true\n        });\n        return;\n      } else if (newPassword.length < 8) {\n        this.getnewPasswordError = \"**new password must be 8 characters\";\n        this.setState({\n          newPasswordValidation: true\n        });\n        return;\n      } else if (oldPassword === newPassword) {\n        this.getnewPasswordError = \"** old password and new password are same\";\n        this.setState({\n          newPasswordValidation: true\n        });\n        return;\n      } else if (newPassword === username) {\n        this.getnewPasswordError = \"** new password and userid are same\";\n        this.setState({\n          newPasswordValidation: true\n        });\n        return;\n      }\n\n      if (confirmPassword === '') {\n        this.getConfirmPasswordError = \"**confirm password is empty\";\n        this.setState({\n          confirmPasswordValidation: true\n        });\n        return;\n      } else if (confirmPassword.length < 8) {\n        this.getConfirmPasswordError = \"**confirm password less than 8 characters\";\n        this.setState({\n          confirmPasswordValidation: true\n        });\n        return;\n      } else if (newPassword !== confirmPassword) {\n        this.getConfirmPasswordError = \"**confirm password not match!!!\";\n        this.setState({\n          confirmPasswordValidation: true\n        });\n        return;\n      }\n\n      const config = {\n        headers: {\n          \"x-auth-token\": cookie.getCookie(\"x-auth-token\")\n        }\n      };\n      const obj = {\n        oldPassword,\n        newPassword // console.log(obj);\n        ///////////////////////changePassword\n\n      };\n      axios.post(changePassword, obj, config).then(res => {\n        //  console.log(res);\n        alert('successfully changed password');\n        cookie.setCookie(\"x-auth-token\", null, -1);\n        this.props.history.push(\"/login\");\n      }).catch(err => {\n        if (err.response) {\n          if (err.response.status === 400 || err.response.status === 401) {\n            console.log(err.response.data);\n            alert(err.response.data.message);\n          } else if (err.response.status === 404) {\n            alert(\"Not Found\");\n          } else if (err.response.status === 500) {\n            alert(err.response.data.message);\n          }\n        } else if (err.request) {\n          console.log(err.request);\n          alert(\"Error Connectiong\");\n        } else {\n          console.log(\"Error\", err.message);\n          alert(err.message);\n        }\n      });\n    };\n\n    this.onChangeOldPassword = e => {\n      this.setState({\n        oldPassword: e.target.value,\n        oldPasswordValidation: false\n      });\n    };\n\n    this.onChangeNewPassword = e => {\n      this.setState({\n        newPassword: e.target.value,\n        newPasswordValidation: false\n      });\n    };\n\n    this.onChangeConfirmPassword = e => {\n      this.setState({\n        confirmPassword: e.target.value,\n        confirmPasswordValidation: false\n      });\n    };\n  }\n\n  componentWillMount() {\n    document.title = 'Change Password';\n  }\n\n  // handleConfirmPasswordClick = e => {\n  //     this.setState({ confirmPasswordValidation: false });\n  // }\n  // handleOldPasswordClick = e => {\n  //     this.setState({ oldPasswordValidation: false });\n  // }\n  // handleNewPasswordClick = e => {\n  //     this.setState({ newPasswordValidation: false });\n  // }\n  render() {\n    const _this$state2 = this.state,\n          oldPassword = _this$state2.oldPassword,\n          newPassword = _this$state2.newPassword,\n          confirmPassword = _this$state2.confirmPassword;\n\n    if (cookie.getCookie(\"x-auth-token\") === \"\" && cookie.getCookie(\"username\") === \"\") {\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-flex align-items-center justify-content-sm-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Images, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      style: {\n        marginLeft: \"auto\",\n        marginRight: \"auto\"\n      },\n      className: \"col-sm-6 border border-light p-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"h4 mb-4 text-center\",\n      style: {\n        color: \"#00cccc\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Change Password\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      style: {\n        color: 'red',\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, this.state.oldPasswordValidation === true ? this.getoldPasswordError : \"\"), React.createElement(\"input\", {\n      label: \"Old Password\",\n      name: \"oldPassword\",\n      type: \"password\",\n      placeholder: \" Old password \",\n      value: oldPassword,\n      onChange: this.onChangeOldPassword,\n      id: \"defaultOldPassword\",\n      className: \"form-control mb-4 border border-primary\",\n      style: {\n        height: \"50px\"\n      },\n      onClick: this.handleOldPasswordClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      style: {\n        color: 'red',\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, this.state.newPasswordValidation === true ? this.getnewPasswordError : \"\"), React.createElement(\"input\", {\n      label: \"New Password\",\n      name: \"newPassword\",\n      type: \"password\",\n      placeholder: \" New Password \",\n      value: newPassword,\n      onChange: this.onChangeNewPassword,\n      id: \"defaultNewPassword\",\n      className: \"form-control mb-4 border border-primary\",\n      style: {\n        height: \"50px\"\n      },\n      onClick: this.handleNewPasswordClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      style: {\n        color: 'red',\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, this.state.confirmPasswordValidation === true ? this.getConfirmPasswordError : \"\"), React.createElement(\"input\", {\n      label: \"Confirm Password\",\n      name: \"confirmPassword\",\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      value: confirmPassword,\n      onChange: this.onChangeConfirmPassword,\n      id: \"defaultConfirmPassword\",\n      className: \"form-control mb-4 border border-primary\",\n      style: {\n        height: \"50px\"\n      },\n      onClick: this.handleConfirmPasswordClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-info btn-block my-4\",\n      type: \"submit\",\n      style: {\n        backgroundColor: \"#00cccc\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default ChangePassword;","map":{"version":3,"sources":["/home/mehedi/Documents/e-newclient_v-2/e-chain-client/src/Component/Password/ChangePassword.js"],"names":["React","Component","cookie","Images","Navbar","Redirect","axios","changePassword","ChangePassword","state","oldPassword","oldPasswordValidation","newPassword","newPasswordValidation","confirmPassword","confirmPasswordValidation","onSubmit","e","preventDefault","getoldPasswordError","setState","length","username","getCookie","getnewPasswordError","getConfirmPasswordError","config","headers","obj","post","then","res","alert","setCookie","props","history","push","catch","err","response","status","console","log","data","message","request","onChangeOldPassword","target","value","onChangeNewPassword","onChangeConfirmPassword","componentWillMount","document","title","render","marginLeft","marginRight","color","textAlign","height","handleOldPasswordClick","handleNewPasswordClick","handleConfirmPasswordClick","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport cookie from \"../utils/cookie\";\nimport Images from \"../Images\";\nimport Navbar from \"../Navbar\";\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport { changePassword } from \"../Url/User\";\n\nclass ChangePassword extends Component {\n    state = {\n        oldPassword: '',\n        oldPasswordValidation: false,\n        newPassword: '',\n        newPasswordValidation: false,\n        confirmPassword: '',\n        confirmPasswordValidation: false\n    }\n\n    componentWillMount() {\n        document.title = 'Change Password';\n    }\n\n    onSubmit = e => {\n        e.preventDefault();\n        const { oldPassword, newPassword, confirmPassword } = this.state;\n\n        if (oldPassword === '') {\n            this.getoldPasswordError = \"**old password is empty\";\n            this.setState({ oldPasswordValidation: true });\n            return;\n        } else if (oldPassword.length < 8) {\n            this.getoldPasswordError = \"**old password must be 8 characters\";\n            this.setState({ oldPasswordValidation: true });\n            return;\n        }\n\n        const username = cookie.getCookie(\"username\");\n        \n\n        if (newPassword === '') {\n            this.getnewPasswordError = \"**new password field is empty\";\n            this.setState({ newPasswordValidation: true });\n            return;\n        } else if (newPassword.length < 8) {\n            this.getnewPasswordError = \"**new password must be 8 characters\";\n            this.setState({ newPasswordValidation: true });\n            return;\n        } else if (oldPassword === newPassword) {\n            this.getnewPasswordError = \"** old password and new password are same\";\n            this.setState({ newPasswordValidation: true });\n            return;\n        }else if(newPassword === username){\n            this.getnewPasswordError = \"** new password and userid are same\";\n            this.setState({ newPasswordValidation: true });\n            return;  \n        }\n\n\n\n\n\n\n        if (confirmPassword === '') {\n            this.getConfirmPasswordError = \"**confirm password is empty\";\n            this.setState({ confirmPasswordValidation: true });\n            return;\n\n        } else if (confirmPassword.length < 8) {\n            this.getConfirmPasswordError = \"**confirm password less than 8 characters\";\n            this.setState({ confirmPasswordValidation: true });\n            return;\n\n        } else if (newPassword !== confirmPassword) {\n            this.getConfirmPasswordError = \"**confirm password not match!!!\";\n            this.setState({ confirmPasswordValidation: true });\n            return;\n        }\n\n        const config = {\n            headers: {\n                \"x-auth-token\": cookie.getCookie(\"x-auth-token\")\n            }\n        }\n\n        const obj = {\n            oldPassword,\n            newPassword\n        }\n       // console.log(obj);\n        ///////////////////////changePassword\n        axios.post(changePassword, obj, config)\n            .then(res => {\n              //  console.log(res);\n                alert('successfully changed password');\n                cookie.setCookie(\"x-auth-token\", null, -1);\n                this.props.history.push(\"/login\");\n            }).catch(err => {\n                if (err.response) {\n                    if (err.response.status === 400 || err.response.status === 401) {\n                        console.log(err.response.data);\n                        alert(err.response.data.message);\n                       \n                    }\n                    else if (err.response.status === 404) {\n                        alert(\"Not Found\");\n                    }\n                    else if (err.response.status === 500) {\n                        alert(err.response.data.message);\n                    }\n                }\n                else if(err.request){\n                    console.log(err.request);\n                    alert(\"Error Connectiong\");\n                }\n                else{\n                    console.log(\"Error\", err.message);\n                    alert(err.message);\n                }\n            });\n\n\n\n\n    }\n\n    onChangeOldPassword = e => {\n        this.setState({ oldPassword: e.target.value, oldPasswordValidation: false });\n    }\n    onChangeNewPassword = e => {\n        this.setState({ newPassword: e.target.value, newPasswordValidation: false });\n    }\n    onChangeConfirmPassword = e => {\n        this.setState({ confirmPassword: e.target.value, confirmPasswordValidation: false });\n    }\n\n    // handleConfirmPasswordClick = e => {\n    //     this.setState({ confirmPasswordValidation: false });\n    // }\n\n    // handleOldPasswordClick = e => {\n    //     this.setState({ oldPasswordValidation: false });\n    // }\n\n    // handleNewPasswordClick = e => {\n    //     this.setState({ newPasswordValidation: false });\n    // }\n\n\n    render() {\n        const { oldPassword, newPassword, confirmPassword } = this.state;\n\n        if (cookie.getCookie(\"x-auth-token\") === \"\" && cookie.getCookie(\"username\") === \"\") {\n            return <Redirect to='/login' />\n        }\n\n        return (\n            <div className=\"container\">\n                <div className=\"d-flex align-items-center justify-content-sm-between\">\n                    <div className=\"col-sm-4\" >\n                        <Images />\n                    </div>\n\n                    <div className=\"col-sm-6\" >\n                        <Navbar />\n                    </div>\n                </div>\n\n                <div style={{ marginLeft: \"auto\", marginRight: \"auto\" }} className=\"col-sm-6 border border-light p-5\">\n\n                    <form onSubmit={this.onSubmit}>\n\n                        <p className=\"h4 mb-4 text-center\" style={{ color: \"#00cccc\" }}>Change Password</p>\n                        <br />\n                        <i style={{ color: 'red', textAlign: \"right\" }}>{this.state.oldPasswordValidation === true ? this.getoldPasswordError : \"\"}</i>\n                        <input label=\"Old Password\" name=\"oldPassword\" type=\"password\" placeholder=\" Old password \" value={oldPassword} onChange={this.onChangeOldPassword} id=\"defaultOldPassword\" className=\"form-control mb-4 border border-primary\" style={{ height: \"50px\" }} onClick={this.handleOldPasswordClick}></input>\n                        <br />\n                        <i style={{ color: 'red', textAlign: \"right\" }}>{this.state.newPasswordValidation === true ? this.getnewPasswordError : \"\"}</i>\n                        <input label=\"New Password\" name=\"newPassword\" type=\"password\" placeholder=\" New Password \" value={newPassword} onChange={this.onChangeNewPassword} id=\"defaultNewPassword\" className=\"form-control mb-4 border border-primary\" style={{ height: \"50px\" }} onClick={this.handleNewPasswordClick}></input>\n\n                        <i style={{ color: 'red', textAlign: \"right\" }}>{this.state.confirmPasswordValidation === true ? this.getConfirmPasswordError : \"\"}</i>\n                        <input label=\"Confirm Password\" name=\"confirmPassword\" type=\"password\" placeholder=\"Confirm Password\" value={confirmPassword} onChange={this.onChangeConfirmPassword} id=\"defaultConfirmPassword\" className=\"form-control mb-4 border border-primary\" style={{ height: \"50px\" }} onClick={this.handleConfirmPasswordClick}></input>\n\n                        <button className=\"btn btn-info btn-block my-4\" type=\"submit\" style={{ backgroundColor: \"#00cccc\" }}>Submit</button>\n\n\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ChangePassword;"]},"metadata":{},"sourceType":"module"}