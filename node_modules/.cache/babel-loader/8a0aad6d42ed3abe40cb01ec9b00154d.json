{"ast":null,"code":"var _jsxFileName = \"/home/mehedi/Documents/e-newclient_v-2/e-chain-client/src/Component/Signup.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport cookie from \"./utils/cookie\";\nimport { Redirect } from 'react-router-dom';\nimport { checkUsername, checkMobile, checkEmail, signUp } from \"./Url/User\";\nimport { spaceUsername } from \"./utils/spaceDetection\";\nimport axios from 'axios';\n\nclass Signup extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: '',\n      usernameValidation: false,\n      password: '',\n      passwordValidation: false,\n      confirmpassword: '',\n      confirmpasswordValidation: false,\n      mobile: '',\n      mobileValidation: false,\n      email: '',\n      emailValidation: false,\n      errors: {}\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      const _this$state = this.state,\n            username = _this$state.username,\n            password = _this$state.password,\n            mobile = _this$state.mobile,\n            email = _this$state.email,\n            confirmpassword = _this$state.confirmpassword;\n\n      if (username === '') {\n        this.getUsernameError = \"**username is empty\";\n        this.setState({\n          usernameValidation: true\n        });\n        return;\n      }\n\n      if (spaceUsername(username) === true) {\n        this.getUsernameError = \"**There should be no space in UserId\";\n        this.setState({\n          usernameValidation: true\n        });\n        return;\n      }\n\n      if (username.length < 3 || username.length >= 30) {\n        this.getUsernameError = \"**Username must be greater than 3 and less than 30 characters\";\n        this.setState({\n          usernameValidation: true\n        });\n        return;\n      }\n\n      const objname = {\n        username //`http://localhost:4000/user/check-username`\n\n      };\n      let uniquename = await axios.post(checkUsername, objname); //  console.log(uniquename.data.status);\n\n      if (uniquename.data.status === true) {\n        this.getUsernameError = \"**duplicate userid\";\n        this.setState({\n          usernameValidation: true\n        });\n        return;\n      }\n\n      if (password === '') {\n        this.getPasswordError = \"**password is empty\";\n        this.setState({\n          passwordValidation: true\n        });\n        return;\n      } else if (password.length < 8) {\n        this.getPasswordError = \"**password must be 8 characters\";\n        this.setState({\n          passwordValidation: true\n        });\n        return;\n      } else if (password === username) {\n        this.getPasswordError = \"**password is not allowed same as username\";\n        this.setState({\n          passwordValidation: true\n        });\n        return;\n      } // else if (spacePassword(password) === true){\n      //     this.getPasswordError = \"**There should be no space in password\";\n      //     this.setState({ passwordValidation: true });\n      //     return;\n      // }\n\n\n      if (confirmpassword === '') {\n        this.getConfirmPasswordError = \"**confirm password is empty\";\n        this.setState({\n          confirmpasswordValidation: true\n        });\n        return;\n      } else if (confirmpassword.length < 8) {\n        this.getConfirmPasswordError = \"**confirm password less than 8 characters\";\n        this.setState({\n          confirmpasswordValidation: true\n        });\n        return;\n      } else if (confirmpassword !== password) {\n        this.getConfirmPasswordError = \"**confirm password not match!!!\";\n        this.setState({\n          confirmpasswordValidation: true\n        });\n        return;\n      }\n\n      if (mobile === '') {\n        this.getMobileError = \"**mobile number field is empty\";\n        this.setState({\n          mobileValidation: true\n        });\n        return;\n      } else if (mobile.length < 11) {\n        this.getMobileError = \"**mobile number is less  than 11 digits\";\n        this.setState({\n          mobileValidation: true\n        });\n        return;\n      } else if (mobile.length > 11) {\n        this.getMobileError = \"**mobile number is greate than 11 digits\";\n        this.setState({\n          mobileValidation: true\n        });\n        return;\n      } //  if (spaceMobile(mobile)=== false){\n      //     this.getMobileError = \"**Mobile number should be 11 characters & any digit from 0 to 9\";\n      //     this.setState({ mobileValidation: true });\n      //     return;\n      // }\n\n\n      const objmobile = {\n        mobile // let uniquemobile = await axios.post(`http://localhost:4000/user/check-mobile`, objmobile);\n\n      };\n      let uniquemobile = await axios.post(checkMobile, objmobile); // console.log(uniquemobile.data.status);\n\n      if (uniquemobile.data.status === true) {\n        this.getMobileError = \"** Mobile Number already exist\";\n        this.setState({\n          mobileValidation: true\n        });\n        return;\n      }\n\n      if (email === \"\") {\n        this.getEmailError = \"**email field is empty\";\n        this.setState({\n          emailValidation: true\n        });\n        return;\n      } else if (this.validateEmail(email) === false) {\n        this.getEmailError = \"**email is invalid\";\n        this.setState({\n          emailValidation: true\n        });\n        return;\n      }\n\n      const objemail = {\n        email // let uniqueEmail = await axios.post(`http://localhost:4000/user/check-email`, objemail);\n\n      };\n      let uniqueEmail = await axios.post(checkEmail, objemail); // console.log(uniquemobile.data.status);\n\n      if (uniqueEmail.data.status === true) {\n        this.getEmailError = \"** Email already exist\";\n        this.setState({\n          emailValidation: true\n        });\n        return;\n      } //  console.log(this.validateEmail(email));\n\n\n      const obj = {\n        username,\n        password,\n        mobile,\n        email\n      }; //let res = await axios.post(`http://localhost:4000/user/signup`, obj);\n\n      try {\n        let res = await axios.post(signUp, obj); //  console.log(res);\n        //   console.log(res.status);\n\n        let data = res.data.userId;\n        cookie.setCookie('userId', data, 5);\n        this.props.history.replace('/pin');\n      } catch (ex) {\n        if (ex.response) {\n          if (ex.response.status === 400 || ex.response.status === 401) {\n            console.log(ex.response.data);\n            alert(ex.response.data.message);\n          } else if (ex.response.status === 404) {\n            alert(\"Not found\");\n          } else if (ex.response.status === 500) {\n            alert(ex.response.data.message);\n          }\n        } else if (ex.request) {\n          console.log(ex.request);\n          alert(\"Error Connecting\");\n        } else {\n          console.log(\"Error\", ex.message);\n          alert(ex.message);\n        }\n      }\n    };\n\n    this.onChangeUserName = e => {\n      this.setState({\n        username: e.target.value,\n        usernameValidation: false\n      });\n    };\n\n    this.onChangePassword = e => {\n      this.setState({\n        password: e.target.value,\n        passwordValidation: false\n      });\n    };\n\n    this.onChangeConfirmPassword = e => {\n      this.setState({\n        confirmpassword: e.target.value,\n        confirmpasswordValidation: false\n      });\n    };\n\n    this.onChangeMobile = e => {\n      this.setState({\n        mobile: e.target.value,\n        mobileValidation: false\n      });\n    };\n\n    this.onChangeEmail = e => {\n      this.setState({\n        email: e.target.value,\n        emailValidation: false\n      });\n    };\n  }\n\n  setCookie(cname, cvalue, minutes) {\n    var d = new Date();\n    d.setTime(d.getTime() + minutes * 60 * 1000);\n    var expires = \"expires=\" + d.toUTCString();\n    document.cookie = cname + \"=\" + cvalue + \"; \" + expires;\n  }\n\n  validateEmail(email) {\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  componentWillMount() {\n    document.title = 'Sign Up';\n  }\n\n  // handleUsernameClick = e => {\n  //     this.setState({ usernameValidation: false });\n  // }\n  // handlePasswordClick = e => {\n  //     this.setState({ passwordValidation: false });\n  // }\n  // handleConfirmPasswordClick = e => {\n  //     this.setState({ confirmpasswordValidation: false });\n  // }\n  // handleMobileClick = e => {\n  //     this.setState({ mobileValidation: false });\n  // }\n  // handleEmailClick = e => {\n  //     this.setState({ emailValidation: false });\n  // }\n  render() {\n    if (cookie.getCookie(\"x-auth-token\") !== \"\" && cookie.getCookie(\"username\") !== \"\") {\n      return React.createElement(Redirect, {\n        to: \"/dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      });\n    } else if (cookie.getCookie('userId') !== \"\") {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      });\n    }\n\n    const _this$state2 = this.state,\n          username = _this$state2.username,\n          password = _this$state2.password,\n          mobile = _this$state2.mobile,\n          email = _this$state2.email,\n          confirmpassword = _this$state2.confirmpassword,\n          errors = _this$state2.errors;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginLeft: \"auto\",\n        marginRight: \"auto\"\n      },\n      className: \"col-sm-6 border border-light p-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"text-center\",\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"h4 mb-4 text-center\",\n      style: {\n        color: \"#00cccc\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(\"i\", {\n      style: {\n        color: 'red',\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, this.state.usernameValidation === true ? this.getUsernameError : \"\"), React.createElement(\"input\", {\n      label: \"Username\",\n      name: \"username\",\n      type: \"text\",\n      placeholder: \" User Id\",\n      value: username,\n      onChange: this.onChangeUserName,\n      error: errors.username,\n      id: \"defaultLoginFormusername\",\n      className: \"form-control mb-4 border border-primary\",\n      style: {\n        height: \"50px\"\n      },\n      onClick: this.handleUsernameClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      style: {\n        color: 'red',\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, this.state.passwordValidation === true ? this.getPasswordError : \"\"), React.createElement(\"input\", {\n      label: \"Password\",\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: this.onChangePassword,\n      error: errors.password,\n      id: \"defaultLoginFormpassword\",\n      className: \"form-control mb-4 border border-primary\",\n      style: {\n        height: \"50px\"\n      },\n      onClick: this.handlePasswordClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      style: {\n        color: 'red',\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, this.state.confirmpasswordValidation === true ? this.getConfirmPasswordError : \"\"), React.createElement(\"input\", {\n      label: \"Confirm Password\",\n      name: \"confirmpassword\",\n      type: \"password\",\n      placeholder: \"confirm Password\",\n      value: confirmpassword,\n      onChange: this.onChangeConfirmPassword,\n      error: errors.confirmpassword,\n      id: \"confirmpass\",\n      className: \"form-control mb-4 border border-primary\",\n      style: {\n        height: \"50px\"\n      },\n      onClick: this.handleConfirmPasswordClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      style: {\n        color: 'red',\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, this.state.mobileValidation === true ? this.getMobileError : \"\"), React.createElement(\"input\", {\n      label: \"Mobile Number\",\n      name: \"mobile\",\n      type: \"text\",\n      placeholder: \"Mobile Number\",\n      value: mobile,\n      onChange: this.onChangeMobile,\n      error: errors.mobile,\n      id: \"defaultLoginFormmobile\",\n      className: \"form-control mb-4 border border-primary\",\n      style: {\n        height: \"50px\"\n      },\n      onClick: this.handleMobileClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }), React.createElement(\"i\", {\n      style: {\n        color: 'red',\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, this.state.emailValidation === true ? this.getEmailError : \"\"), React.createElement(\"input\", {\n      label: \"Email\",\n      name: \"email\",\n      type: \"text\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: this.onChangeEmail,\n      error: errors.email,\n      id: \"defaultLoginFormemail\",\n      className: \"form-control mb-4 border border-primary\",\n      style: {\n        height: \"50px\"\n      },\n      onClick: this.handleEmailClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        fontSize: \"13px\",\n        color: \"#848e8e\",\n        fontStyle: \"italic\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, \"Signing up for a E-KYC account means you agree to the Privacy Policy and\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }), \" Terms of Service.\"), React.createElement(\"button\", {\n      className: \"btn btn-info btn-block my-4\",\n      type: \"submit\",\n      style: {\n        backgroundColor: \"#00cccc\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, \"Already Have an account?\\xA0\", React.createElement(Link, {\n      to: \"/login\",\n      style: {\n        color: \"#00cccc\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, \"Login\"))))) // <div className=\"container\">\n    //     <div>\n    //         <br></br>\n    //         <h1 style={{ textAlign: \"center\", color: \"#989799\" }} >Add Person</h1>\n    //     </div>\n    //     <br></br>\n    //     <div Align=\"center\">\n    //         <form onSubmit={this.onSubmit}>\n    //             <div className='col-md-5' >\n    //                 <TextInputGroup\n    //                     label=\"Name\"\n    //                     Align=\"left\"\n    //                     name=\"username\"\n    //                     type=\"text\"\n    //                     placeholder=\"Enter your username\"\n    //                     value={username}\n    //                     onChange={this.onChangeUserName}\n    //                     error={errors.username}\n    //                 />\n    //                 <TextInputGroup\n    //                     label=\"Password\"\n    //                     name=\"password\"\n    //                     type=\"text\"\n    //                     placeholder=\"Password\"\n    //                     value={password}\n    //                     onChange={this.onChangePassword}\n    //                     error={errors.password}\n    //                 />\n    //                 <TextInputGroup\n    //                     label=\"Mobile Number\"\n    //                     name=\"mobile\"\n    //                     type=\"text\"\n    //                     placeholder=\"Mobile Number\"\n    //                     value={mobile}\n    //                     onChange={this.onChangeMobile}\n    //                     error={errors.mobile}\n    //                 />\n    //                 <TextInputGroup\n    //                     label=\"Email\"\n    //                     name=\"email\"\n    //                     type=\"text\"\n    //                     placeholder=\"Email Address\"\n    //                     value={email}\n    //                     onChange={this.onChangeEmail}\n    //                     error={errors.email}\n    //                 />\n    //             </div>\n    //             {/* <input\n    //                 type=\"submit\"            \n    //                 value=\"Add Person\"\n    //                 className=\"btn btn-primary\"\n    //             /> */}\n    //             <div className=\"col-md-5\" Align=\"right\">\n    //                 <button type=\"submit\" className=\"btn btn-info btn-sm\">SignUp</button>\n    //             </div>\n    //         </form>\n    //     </div>\n    // </div>\n    ;\n  }\n\n}\n\nexport default Signup;","map":{"version":3,"sources":["/home/mehedi/Documents/e-newclient_v-2/e-chain-client/src/Component/Signup.js"],"names":["React","Component","Link","cookie","Redirect","checkUsername","checkMobile","checkEmail","signUp","spaceUsername","axios","Signup","state","username","usernameValidation","password","passwordValidation","confirmpassword","confirmpasswordValidation","mobile","mobileValidation","email","emailValidation","errors","onSubmit","e","preventDefault","getUsernameError","setState","length","objname","uniquename","post","data","status","getPasswordError","getConfirmPasswordError","getMobileError","objmobile","uniquemobile","getEmailError","validateEmail","objemail","uniqueEmail","obj","res","userId","setCookie","props","history","replace","ex","response","console","log","alert","message","request","onChangeUserName","target","value","onChangePassword","onChangeConfirmPassword","onChangeMobile","onChangeEmail","cname","cvalue","minutes","d","Date","setTime","getTime","expires","toUTCString","document","re","test","String","toLowerCase","componentWillMount","title","render","getCookie","marginLeft","marginRight","color","textAlign","height","handleUsernameClick","handlePasswordClick","handleConfirmPasswordClick","handleMobileClick","handleEmailClick","fontSize","fontStyle","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport cookie from \"./utils/cookie\";\nimport { Redirect } from 'react-router-dom';\nimport { checkUsername, checkMobile, checkEmail, signUp } from \"./Url/User\";\nimport { spaceUsername } from \"./utils/spaceDetection\";\nimport axios from 'axios';\n\nclass Signup extends Component {\n    state = {\n        username: '',\n        usernameValidation: false,\n        password: '',\n        passwordValidation: false,\n        confirmpassword: '',\n        confirmpasswordValidation: false,\n        mobile: '',\n        mobileValidation: false,\n        email: '',\n        emailValidation: false,\n        errors: {},\n\n    };\n\n    setCookie(cname, cvalue, minutes) {\n        var d = new Date();\n        d.setTime(d.getTime() + (minutes * 60 * 1000));\n        var expires = \"expires=\" + d.toUTCString();\n        document.cookie = cname + \"=\" + cvalue + \"; \" + expires;\n    }\n\n    validateEmail(email) {\n        var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(String(email).toLowerCase());\n    }\n\n    componentWillMount() {\n        document.title = 'Sign Up';\n    }\n\n\n\n\n\n    onSubmit = async (e) => {\n        e.preventDefault();\n\n        const { username, password, mobile, email, confirmpassword } = this.state;\n\n        if (username === '') {\n            this.getUsernameError = \"**username is empty\";\n            this.setState({ usernameValidation: true });\n            return;\n        }\n\n        if (spaceUsername(username) === true) {\n            this.getUsernameError = \"**There should be no space in UserId\";\n            this.setState({ usernameValidation: true });\n            return;\n        }\n\n        if (username.length < 3 || username.length >= 30) {\n            this.getUsernameError = \"**Username must be greater than 3 and less than 30 characters\"\n            this.setState({ usernameValidation: true });\n            return;\n        }\n        const objname = {\n            username\n        }\n        //`http://localhost:4000/user/check-username`\n        let uniquename = await axios.post(checkUsername, objname);\n        //  console.log(uniquename.data.status);\n        if (uniquename.data.status === true) {\n            this.getUsernameError = \"**duplicate userid\";\n            this.setState({ usernameValidation: true });\n            return;\n        }\n\n\n\n        if (password === '') {\n            this.getPasswordError = \"**password is empty\";\n            this.setState({ passwordValidation: true });\n            return;\n        } else if (password.length < 8) {\n            this.getPasswordError = \"**password must be 8 characters\";\n            this.setState({ passwordValidation: true });\n            return;\n        }else if(password === username){\n            this.getPasswordError = \"**password is not allowed same as username\";\n            this.setState({ passwordValidation: true });\n            return;\n        }\n        // else if (spacePassword(password) === true){\n        //     this.getPasswordError = \"**There should be no space in password\";\n        //     this.setState({ passwordValidation: true });\n        //     return;\n        // }\n\n\n\n        if (confirmpassword === '') {\n            this.getConfirmPasswordError = \"**confirm password is empty\";\n            this.setState({ confirmpasswordValidation: true });\n            return;\n\n        } else if (confirmpassword.length < 8) {\n            this.getConfirmPasswordError = \"**confirm password less than 8 characters\";\n            this.setState({ confirmpasswordValidation: true });\n            return;\n\n        } else if (confirmpassword !== password) {\n            this.getConfirmPasswordError = \"**confirm password not match!!!\";\n            this.setState({ confirmpasswordValidation: true });\n            return;\n        }\n\n\n        if (mobile === '') {\n            this.getMobileError = \"**mobile number field is empty\";\n            this.setState({ mobileValidation: true });\n            return;\n        } else if (mobile.length < 11) {\n            this.getMobileError = \"**mobile number is less  than 11 digits\";\n            this.setState({ mobileValidation: true });\n            return;\n        } else if (mobile.length > 11) {\n            this.getMobileError = \"**mobile number is greate than 11 digits\";\n            this.setState({ mobileValidation: true });\n            return;\n        }\n\n        //  if (spaceMobile(mobile)=== false){\n        //     this.getMobileError = \"**Mobile number should be 11 characters & any digit from 0 to 9\";\n        //     this.setState({ mobileValidation: true });\n        //     return;\n        // }\n        const objmobile = {\n            mobile\n        }\n\n        // let uniquemobile = await axios.post(`http://localhost:4000/user/check-mobile`, objmobile);\n        let uniquemobile = await axios.post(checkMobile, objmobile);\n        // console.log(uniquemobile.data.status);\n        if (uniquemobile.data.status === true) {\n            this.getMobileError = \"** Mobile Number already exist\";\n            this.setState({ mobileValidation: true });\n            return;\n        }\n\n        if (email === \"\") {\n            this.getEmailError = \"**email field is empty\";\n            this.setState({ emailValidation: true });\n            return;\n        } else if (this.validateEmail(email) === false) {\n            this.getEmailError = \"**email is invalid\";\n            this.setState({ emailValidation: true });\n            return;\n        }\n\n        const objemail = {\n            email\n        }\n\n        // let uniqueEmail = await axios.post(`http://localhost:4000/user/check-email`, objemail);\n        let uniqueEmail = await axios.post(checkEmail, objemail);\n        // console.log(uniquemobile.data.status);\n        if (uniqueEmail.data.status === true) {\n            this.getEmailError = \"** Email already exist\";\n            this.setState({ emailValidation: true });\n            return;\n        }\n\n        //  console.log(this.validateEmail(email));\n\n        const obj = {\n            username,\n            password,\n            mobile,\n            email\n        };\n\n        //let res = await axios.post(`http://localhost:4000/user/signup`, obj);\n        try {\n            let res = await axios.post(signUp, obj);\n            //  console.log(res);\n            //   console.log(res.status);\n            let data = res.data.userId;\n            cookie.setCookie('userId', data, 5);\n            this.props.history.replace('/pin');\n\n        } catch (ex) {\n            if (ex.response) {\n                if (ex.response.status === 400 || ex.response.status === 401) {\n                    console.log(ex.response.data);\n                    alert(ex.response.data.message);\n                }\n                else if (ex.response.status === 404) {\n                    alert(\"Not found\");\n                }\n                else if (ex.response.status === 500) {\n                    alert(ex.response.data.message);\n                }\n            }\n            else if (ex.request) {\n                console.log(ex.request);\n                alert(\"Error Connecting\");\n            }\n            else {\n                console.log(\"Error\", ex.message);\n                alert(ex.message);\n            }\n\n        }\n\n\n    }\n\n\n\n    onChangeUserName = e => {\n        this.setState({ username: e.target.value, usernameValidation: false });\n    }\n    onChangePassword = e => {\n        this.setState({ password: e.target.value, passwordValidation: false });\n    }\n    onChangeConfirmPassword = e => {\n        this.setState({ confirmpassword: e.target.value, confirmpasswordValidation: false });\n    }\n    onChangeMobile = e => {\n        this.setState({ mobile: e.target.value, mobileValidation: false });\n    }\n    onChangeEmail = e => {\n        this.setState({ email: e.target.value, emailValidation: false });\n    }\n\n\n    // handleUsernameClick = e => {\n    //     this.setState({ usernameValidation: false });\n    // }\n    // handlePasswordClick = e => {\n    //     this.setState({ passwordValidation: false });\n    // }\n\n    // handleConfirmPasswordClick = e => {\n    //     this.setState({ confirmpasswordValidation: false });\n    // }\n\n    // handleMobileClick = e => {\n    //     this.setState({ mobileValidation: false });\n    // }\n\n    // handleEmailClick = e => {\n    //     this.setState({ emailValidation: false });\n    // }\n\n\n    render() {\n        if (cookie.getCookie(\"x-auth-token\") !== \"\" && cookie.getCookie(\"username\") !== \"\") {\n            return <Redirect to='/dashboard' />\n        }else if (cookie.getCookie('userId') !== \"\") {\n            return <Redirect to='/' />\n        }\n        const { username, password, mobile, email, confirmpassword, errors } = this.state;\n\n        return (\n\n            <div className=\"container\">\n                <div style={{ marginLeft: \"auto\", marginRight: \"auto\" }} className=\"col-sm-6 border border-light p-5\">\n\n                    <form className=\"text-center\" onSubmit={this.onSubmit}>\n\n\n                        <p className=\"h4 mb-4 text-center\" style={{ color: \"#00cccc\" }}>Sign Up</p>\n\n                        <i style={{ color: 'red', textAlign: \"right\" }}>{this.state.usernameValidation === true ? this.getUsernameError : \"\"}</i>\n                        <input label=\"Username\" name=\"username\" type=\"text\" placeholder=\" User Id\" value={username} onChange={this.onChangeUserName} error={errors.username} id=\"defaultLoginFormusername\" className=\"form-control mb-4 border border-primary\" style={{ height: \"50px\" }} onClick={this.handleUsernameClick}></input>\n\n                        <i style={{ color: 'red', textAlign: \"right\" }}>{this.state.passwordValidation === true ? this.getPasswordError : \"\"}</i>\n                        <input label=\"Password\" name=\"password\" type=\"password\" placeholder=\"Password\" value={password} onChange={this.onChangePassword} error={errors.password} id=\"defaultLoginFormpassword\" className=\"form-control mb-4 border border-primary\" style={{ height: \"50px\" }} onClick={this.handlePasswordClick}></input>\n\n                        <i style={{ color: 'red', textAlign: \"right\" }}>{this.state.confirmpasswordValidation === true ? this.getConfirmPasswordError : \"\"}</i>\n                        <input label=\"Confirm Password\" name=\"confirmpassword\" type=\"password\" placeholder=\"confirm Password\" value={confirmpassword} onChange={this.onChangeConfirmPassword} error={errors.confirmpassword} id=\"confirmpass\" className=\"form-control mb-4 border border-primary\" style={{ height: \"50px\" }} onClick={this.handleConfirmPasswordClick}></input>\n\n                        <i style={{ color: 'red', textAlign: \"right\" }}>{this.state.mobileValidation === true ? this.getMobileError : \"\"}</i>\n                        <input label=\"Mobile Number\" name=\"mobile\" type=\"text\" placeholder=\"Mobile Number\" value={mobile} onChange={this.onChangeMobile} error={errors.mobile} id=\"defaultLoginFormmobile\" className=\"form-control mb-4 border border-primary\" style={{ height: \"50px\" }} onClick={this.handleMobileClick}></input>\n\n                        <i style={{ color: 'red', textAlign: \"right\" }}>{this.state.emailValidation === true ? this.getEmailError : \"\"}</i>\n                        <input label=\"Email\" name=\"email\" type=\"text\" placeholder=\"Email\" value={email} onChange={this.onChangeEmail} error={errors.email} id=\"defaultLoginFormemail\" className=\"form-control mb-4 border border-primary\" style={{ height: \"50px\" }} onClick={this.handleEmailClick}></input>\n\n\n                        <p style={{ fontSize: \"13px\", color: \"#848e8e\", fontStyle: \"italic\" }}>Signing up for a E-KYC account means you agree to the Privacy Policy and<br /> Terms of Service.</p>\n\n\n\n                        <button className=\"btn btn-info btn-block my-4\" type=\"submit\" style={{ backgroundColor: \"#00cccc\" }}>Sign Up</button>\n\n\n                        <p>Already Have an account?&nbsp;<Link to=\"/login\" style={{ color: \"#00cccc\" }}>Login</Link></p>\n\n\n\n\n\n\n\n                    </form>\n                </div>\n\n            </div>\n\n\n\n\n\n\n\n\n            // <div className=\"container\">\n            //     <div>\n            //         <br></br>\n\n            //         <h1 style={{ textAlign: \"center\", color: \"#989799\" }} >Add Person</h1>\n            //     </div>\n\n            //     <br></br>\n\n            //     <div Align=\"center\">\n            //         <form onSubmit={this.onSubmit}>\n\n            //             <div className='col-md-5' >\n            //                 <TextInputGroup\n            //                     label=\"Name\"\n            //                     Align=\"left\"\n            //                     name=\"username\"\n            //                     type=\"text\"\n            //                     placeholder=\"Enter your username\"\n            //                     value={username}\n            //                     onChange={this.onChangeUserName}\n            //                     error={errors.username}\n            //                 />\n\n\n            //                 <TextInputGroup\n            //                     label=\"Password\"\n            //                     name=\"password\"\n            //                     type=\"text\"\n            //                     placeholder=\"Password\"\n            //                     value={password}\n            //                     onChange={this.onChangePassword}\n            //                     error={errors.password}\n            //                 />\n\n            //                 <TextInputGroup\n            //                     label=\"Mobile Number\"\n            //                     name=\"mobile\"\n            //                     type=\"text\"\n            //                     placeholder=\"Mobile Number\"\n            //                     value={mobile}\n            //                     onChange={this.onChangeMobile}\n            //                     error={errors.mobile}\n            //                 />\n\n            //                 <TextInputGroup\n            //                     label=\"Email\"\n            //                     name=\"email\"\n            //                     type=\"text\"\n            //                     placeholder=\"Email Address\"\n            //                     value={email}\n            //                     onChange={this.onChangeEmail}\n            //                     error={errors.email}\n            //                 />\n            //             </div>\n\n\n            //             {/* <input\n            //                 type=\"submit\"            \n            //                 value=\"Add Person\"\n            //                 className=\"btn btn-primary\"\n            //             /> */}\n\n            //             <div className=\"col-md-5\" Align=\"right\">\n            //                 <button type=\"submit\" className=\"btn btn-info btn-sm\">SignUp</button>\n            //             </div>\n            //         </form>\n\n            //     </div>\n\n            // </div>\n\n        );\n    }\n}\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}