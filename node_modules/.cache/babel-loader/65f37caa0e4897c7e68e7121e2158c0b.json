{"ast":null,"code":"var _jsxFileName = \"/home/mehedi/Documents/e-newclient_v-2/e-chain-client/src/Component/Pin.js\";\nimport React, { Component } from 'react'; //import Axios from 'axios';\n\nimport axios from 'axios';\nimport cookie from \"./utils/cookie\";\nimport { createAccount } from \"./Url/User\";\nimport { Redirect } from 'react-router-dom';\n\nclass Pin extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      pin: '',\n      pinValidation: false,\n      objId: '',\n      errors: {}\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      const pin = this.state.pin;\n\n      if (pin === '') {\n        this.getPinError = \"**please enter the pin\";\n        this.setState({\n          pinValidation: true\n        });\n        return;\n      } else if (pin.length < 4) {\n        this.getPinError = \"** pin must be 4 characters\";\n        this.setState({\n          pinValidation: true\n        });\n        return;\n      } else if (pin.length > 4) {\n        this.getPinError = \"** pin must be 4 characters\";\n        this.setState({\n          pinValidation: true\n        });\n        return;\n      }\n\n      const objectId = this.getCookie('userId'); //console.log(objectId);\n\n      const newobj = {\n        pin,\n        userId: objectId // console.log(newobj);\n        //console.log(pin);\n        // console.log(objectId);\n\n      };\n\n      try {\n        // let res = await axios.post(`http://localhost:4000/user/create-account`,newobj);\n        //CreateAccount\n        let res = await axios.post(createAccount, newobj); // console.log(res.data);\n        // console.log(res.status);\n\n        cookie.setCookie('userId', null, -1); // this.props.history.replace('/newlogin');\n\n        this.props.history.replace('/newlogin');\n      } catch (error) {\n        // if(error.response){\n        //   alert(error.response.data.message);\n        // }\n        // else {\n        //   alert(\"Error connecting\");\n        // }\n        if (error.response) {\n          if (error.response.status === 400 || error.response.status === 401) {\n            console.log(error.response.data);\n            alert(error.response.data.message);\n          } else if (error.response.status === 404) {\n            alert(\"Not found\");\n          } else if (error.response.status === 500) {\n            alert(error.response.data.message);\n          }\n        } else if (error.request) {\n          console.log(error.request);\n          alert(\"Error Connecting\");\n        } else {\n          console.log('Error', error.message);\n          alert(error.message);\n        }\n      } ////////////////////////////////////////////////////\n      ///////////////////////////////////////////////////////////\n      // try {\n      //     let r = await axios.post('/get-all', { id: 1 });\n      //     console.log(r.data);\n      //     console.log(r.status);\n      //     alert(r.data.message);\n      // }\n      // catch (ex) {\n      //     if (ex.response) {\n      //         // The request was made and the server responded with a status code\n      //         // that falls out of the range of 2xx\n      //         if (ex.response.status === 400 || ex.response.status === 401) {\n      //             console.log(ex.response.data);\n      //             alert(ex.response.data.message)\n      //         }\n      //         else if (ex.response.status === 404) {\n      //             alert(\"Not found\");\n      //         }\n      //         else if (ex.response.status === 500) {\n      //             alert(ex.response.data.message)\n      //         }\n      //     }\n      //     else if (ex.request) {\n      //         // The request was made but no response was received\n      //         // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n      //         // http.ClientRequest in node.js\n      //         console.log(ex.request);\n      //         alert(\"Error connecting\");\n      //     }\n      //     else {\n      //         // Something happened in setting up the request that triggered an Error\n      //         console.log('Error', ex.message);\n      //         alert(ex.message);\n      //     }\n      // }\n      //////////////////////////////////////////////////////////\n      ///////////////////////////////////////////////////\n      // let res = await axios.post(`http://localhost:4000/user/create-account`,newobj);\n      // console.log(res.data);\n      // fetch(`http://localhost:4000/user/create-account`, {\n      //   method: 'POST', // or 'PUT'\n      //   body: JSON.stringify(newobj), // data can be `string` or {object}!\n      //   headers: {\n      //     'Content-Type': 'application/json'\n      //   }\n      // })\n      //   .then(async response => {\n      //     if (response.status === 400) {\n      //       let error = await response.json();\n      //       this.getPinError = \"**\" + error.message;\n      //       // console.log(error.message);\n      //       this.setState({ pinValidation: true });\n      //     }\n      //     else if (response.status === 401) {\n      //       let error = await response.json();\n      //       this.getPinError = \"**\" + error.message;\n      //       //console.log(error.message);\n      //       this.setState({ pinValidation: true });\n      //     }\n      //     else if (response.status === 500) {\n      //       let error = await response.json();\n      //       this.getPinError = \"**\" + error.message;\n      //       //console.log(error.message);\n      //     }\n      //     else if(response.status === 200){\n      //       cookie.setCookie('userId', null, -1);\n      //       this.props.history.replace('/newlogin');\n      //     }\n      //     else {\n      //         alert(\"Unknown error:\", response.status);\n      //     }\n      //   })\n      //   .catch(error => alert('Error:', error.response.data.message));\n\n    };\n\n    this.onChangePin = e => {\n      this.setState({\n        pin: e.target.value,\n        pinValidation: false\n      });\n    };\n  }\n\n  componentWillMount() {\n    document.title = 'Pin';\n  }\n\n  getCookie(cname) {\n    var name = cname + \"=\";\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var ca = decodedCookie.split(';');\n\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n\n      while (c.charAt(0) === ' ') {\n        c = c.substring(1);\n      }\n\n      if (c.indexOf(name) === 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n\n    return \"\";\n  }\n\n  // handlePin = e => {\n  //   this.setState({ pinValidation: false })\n  // }\n  render() {\n    const _this$state = this.state,\n          pin = _this$state.pin,\n          errors = _this$state.errors;\n\n    if (cookie.getCookie(\"x-auth-token\") !== \"\" && cookie.getCookie(\"username\") !== \"\") {\n      return React.createElement(Redirect, {\n        to: \"/dashboard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      });\n    } else if (cookie.getCookie('userId') === \"\") {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginLeft: \"auto\",\n        marginRight: \"auto\"\n      },\n      className: \"col-sm-6 border border-light p-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"h4 mb-4 text-center\",\n      style: {\n        color: \"#00cccc\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \"Pin\"), React.createElement(\"i\", {\n      style: {\n        color: 'red',\n        textAlign: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, this.state.pinValidation === true ? this.getPinError : \"\"), React.createElement(\"input\", {\n      label: \"Pin\",\n      name: \"pin\",\n      type: \"text\",\n      placeholder: \"Pin Number\",\n      value: pin,\n      onChange: this.onChangePin,\n      error: errors.pin,\n      id: \"defaultLoginFormpin\",\n      className: \"form-control mb-4 border border-primary\",\n      style: {\n        height: \"50px\"\n      },\n      onClick: this.handlePin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-info btn-block my-4\",\n      type: \"submit\",\n      style: {\n        backgroundColor: \"#00cccc\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"p\", {\n      style: {\n        textAlign: \"center\",\n        color: \"#00cccc\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \" \", React.createElement(\"i\", {\n      className: \"fas fa-mobile-alt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"  Please Check your phone for pin \"), \"  \"))));\n  }\n\n}\n\nexport default Pin;","map":{"version":3,"sources":["/home/mehedi/Documents/e-newclient_v-2/e-chain-client/src/Component/Pin.js"],"names":["React","Component","axios","cookie","createAccount","Redirect","Pin","state","pin","pinValidation","objId","errors","onSubmit","e","preventDefault","getPinError","setState","length","objectId","getCookie","newobj","userId","res","post","setCookie","props","history","replace","error","response","status","console","log","data","alert","message","request","onChangePin","target","value","componentWillMount","document","title","cname","name","decodedCookie","decodeURIComponent","ca","split","i","c","charAt","substring","indexOf","render","marginLeft","marginRight","color","textAlign","height","handlePin","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import Axios from 'axios';\nimport axios from 'axios';\nimport cookie from \"./utils/cookie\";\nimport { createAccount } from \"./Url/User\";\nimport { Redirect } from 'react-router-dom';\n\nclass Pin extends Component {\n  state = {\n    pin: '',\n    pinValidation: false,\n    objId: '',\n    errors: {}\n  }\n\n  componentWillMount() {\n    document.title = 'Pin';\n  }\n\n  getCookie(cname) {\n    var name = cname + \"=\";\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var ca = decodedCookie.split(';');\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n      while (c.charAt(0) === ' ') {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) === 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n    return \"\";\n  }\n  onSubmit = async (e) => {\n    e.preventDefault();\n\n    const { pin } = this.state;\n\n    if (pin === '') {\n      this.getPinError = \"**please enter the pin\";\n      this.setState({ pinValidation: true });\n      return;\n    } else if (pin.length < 4) {\n      this.getPinError = \"** pin must be 4 characters\";\n      this.setState({ pinValidation: true });\n      return;\n    } else if (pin.length > 4) {\n      this.getPinError = \"** pin must be 4 characters\";\n      this.setState({ pinValidation: true });\n      return;\n    }\n    const objectId = this.getCookie('userId');\n    //console.log(objectId);\n\n    const newobj = {\n      pin,\n      userId: objectId\n    }\n    // console.log(newobj);\n    //console.log(pin);\n    // console.log(objectId);\n    try {\n      // let res = await axios.post(`http://localhost:4000/user/create-account`,newobj);\n      //CreateAccount\n      let res = await axios.post(createAccount, newobj);\n     // console.log(res.data);\n     // console.log(res.status);\n      cookie.setCookie('userId', null, -1);\n      // this.props.history.replace('/newlogin');\n      this.props.history.replace('/newlogin');\n    }\n    catch (error) {\n      // if(error.response){\n      //   alert(error.response.data.message);\n      // }\n      // else {\n      //   alert(\"Error connecting\");\n      // }\n      if (error.response) {\n        if (error.response.status === 400 || error.response.status === 401) {\n          console.log(error.response.data);\n          alert(error.response.data.message);\n        }\n        else if (error.response.status === 404) {\n          alert(\"Not found\");\n        }\n        else if (error.response.status === 500) {\n          alert(error.response.data.message);\n        }\n      }\n      else if (error.request){\n        console.log(error.request);\n        alert(\"Error Connecting\");\n      }\n      else {\n          console.log('Error', error.message);\n          alert(error.message)\n      }\n\n\n    }\n\n    \n\n    ////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////\n    // try {\n    //     let r = await axios.post('/get-all', { id: 1 });\n    //     console.log(r.data);\n    //     console.log(r.status);\n    //     alert(r.data.message);\n    // }\n    // catch (ex) {\n\n    //     if (ex.response) {\n    //         // The request was made and the server responded with a status code\n    //         // that falls out of the range of 2xx\n    //         if (ex.response.status === 400 || ex.response.status === 401) {\n    //             console.log(ex.response.data);\n    //             alert(ex.response.data.message)\n    //         }\n    //         else if (ex.response.status === 404) {\n    //             alert(\"Not found\");\n    //         }\n    //         else if (ex.response.status === 500) {\n    //             alert(ex.response.data.message)\n    //         }\n    //     }\n    //     else if (ex.request) {\n    //         // The request was made but no response was received\n    //         // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n    //         // http.ClientRequest in node.js\n    //         console.log(ex.request);\n    //         alert(\"Error connecting\");\n    //     }\n    //     else {\n    //         // Something happened in setting up the request that triggered an Error\n    //         console.log('Error', ex.message);\n    //         alert(ex.message);\n\n    //     }\n\n    // }\n    //////////////////////////////////////////////////////////\n\n\n\n    ///////////////////////////////////////////////////\n\n\n    // let res = await axios.post(`http://localhost:4000/user/create-account`,newobj);\n    // console.log(res.data);\n\n\n    // fetch(`http://localhost:4000/user/create-account`, {\n    //   method: 'POST', // or 'PUT'\n    //   body: JSON.stringify(newobj), // data can be `string` or {object}!\n    //   headers: {\n    //     'Content-Type': 'application/json'\n    //   }\n    // })\n    //   .then(async response => {\n    //     if (response.status === 400) {\n    //       let error = await response.json();\n    //       this.getPinError = \"**\" + error.message;\n    //       // console.log(error.message);\n    //       this.setState({ pinValidation: true });\n    //     }\n    //     else if (response.status === 401) {\n    //       let error = await response.json();\n    //       this.getPinError = \"**\" + error.message;\n    //       //console.log(error.message);\n    //       this.setState({ pinValidation: true });\n    //     }\n    //     else if (response.status === 500) {\n    //       let error = await response.json();\n    //       this.getPinError = \"**\" + error.message;\n    //       //console.log(error.message);\n\n    //     }\n    //     else if(response.status === 200){\n    //       cookie.setCookie('userId', null, -1);\n    //       this.props.history.replace('/newlogin');\n    //     }\n    //     else {\n    //         alert(\"Unknown error:\", response.status);\n    //     }\n\n    //   })\n    //   .catch(error => alert('Error:', error.response.data.message));\n\n\n\n  }\n\n  onChangePin = e => {\n    this.setState({ pin: e.target.value, pinValidation: false });\n  }\n\n  // handlePin = e => {\n  //   this.setState({ pinValidation: false })\n  // }\n\n  render() {\n    const { pin, errors } = this.state;\n\n    if (cookie.getCookie(\"x-auth-token\") !== \"\" && cookie.getCookie(\"username\") !== \"\") {\n      return <Redirect to='/dashboard' />\n  }else if (cookie.getCookie('userId') === \"\") {\n      return <Redirect to='/' />\n\n\n    }\n    return (\n      <div className=\"container\">\n        <div style={{ marginLeft: \"auto\", marginRight: \"auto\" }} className=\"col-sm-6 border border-light p-5\">\n\n          <form onSubmit={this.onSubmit}>\n            <br /> <br />\n\n            <p className=\"h4 mb-4 text-center\" style={{ color: \"#00cccc\" }}>Pin</p>\n\n            <i style={{ color: 'red', textAlign: \"right\" }}>{this.state.pinValidation === true ? this.getPinError : \"\"}</i>\n            <input label=\"Pin\" name=\"pin\" type=\"text\" placeholder=\"Pin Number\" value={pin} onChange={this.onChangePin} error={errors.pin} id=\"defaultLoginFormpin\" className=\"form-control mb-4 border border-primary\" style={{ height: \"50px\" }} onClick={this.handlePin}></input>\n\n            <button className=\"btn btn-info btn-block my-4\" type=\"submit\" style={{ backgroundColor: \"#00cccc\" }}>Submit</button>\n\n            <p style={{ textAlign: \"center\", color: \"#00cccc\" }}> <i className=\"fas fa-mobile-alt\">  Please Check your phone for pin </i>  </p>\n\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Pin;"]},"metadata":{},"sourceType":"module"}