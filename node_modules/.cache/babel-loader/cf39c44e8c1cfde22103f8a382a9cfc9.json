{"ast":null,"code":"var _jsxFileName = \"/home/mehedi/Documents/e-newclient_v-2/e-chain-client/src/Component/Welcome.js\";\nimport React, { Component } from 'react';\nimport ImageConversion from './utils/ImageConversion';\nimport './css/Welcome.css';\nimport axios from 'axios';\nimport cookie from './utils/cookie';\nimport { getProfileImage, uploadProfileImage, updateProfileImage } from \"./Url/User\";\nimport profile from './ProImage/profile.png';\n\nclass Welcome extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      profileImage: null,\n      img: profile,\n      flagImage: false\n    };\n\n    this.fileSelectedHandler = event => {\n      try {\n        this.setState({\n          profileImage: event.target.files[0]\n        });\n      } catch (ex) {\n        console.log(ex);\n      }\n    };\n\n    this.fileUploadHandler = async () => {\n      const fd = new FormData();\n      fd.append('profileImage', this.state.profileImage, this.state.profileImage.name);\n      console.log(this.state.profileImage);\n      const config = {\n        headers: {\n          \"x-auth-token\": cookie.getCookie(\"x-auth-token\")\n        }\n      };\n\n      if (this.state.flagImage !== true) {\n        axios.post(uploadProfileImage, fd, config).then(res => {\n          console.log(res); //console.log(res.data._id);\n\n          if (res.data.id !== null) {\n            axios.get(getProfileImage, config).then(newres => {\n              try {\n                let base64Flag = 'data:image/jpeg;base64,';\n                let imageBuffer = newres.data.image.data.data;\n                let imageString = ImageConversion.arrayBufferToBase64(imageBuffer);\n                let convertImageFlag = base64Flag + imageString;\n                this.setState({\n                  img: convertImageFlag,\n                  flagImage: true\n                });\n              } catch (ex) {\n                if (ex.response) {\n                  if (ex.response.status === 400 || ex.response.status === 401) {\n                    console.log(ex.response.data);\n                    alert(ex.response.data.message);\n                  } else if (ex.response.status === 404) {\n                    alert(\"Not found\");\n                  } else if (ex.response.status === 500) {\n                    alert(ex.response.data.message);\n                  }\n                } else if (ex.request) {\n                  console.log(ex.request);\n                  alert(\"Error Connecting\");\n                } else {\n                  console.log(\"Error\", ex.message);\n                  alert(ex.message);\n                }\n              }\n            }).catch(err => {\n              if (err.response) {\n                if (err.response.status === 400 || err.response.status === 401) {\n                  console.log(err.response.data);\n                  alert(err.response.data.message);\n                } else if (err.response.status === 404) {\n                  alert(\"Not found\");\n                } else if (err.response.status === 500) {\n                  alert(err.response.data.message);\n                }\n              } else if (err.request) {\n                console.log(err.request);\n                alert(\"Error Connecting\");\n              } else {\n                console.log(\"Error\", err.message);\n                alert(err.message);\n              }\n            });\n          }\n        }).catch(error => {\n          if (error.response) {\n            if (error.response.status === 400 || error.response.status === 401) {\n              console.log(error.response.data);\n              alert(error.response.data.message);\n            } else if (error.response.status === 404) {\n              alert(\"Not found\");\n            } else if (error.response.status === 500) {\n              alert(error.response.data.message);\n            }\n          } else if (error.request) {\n            console.log(error.request);\n            alert(\"Error Connecting\");\n          } else {\n            console.log(\"Error\", error.message);\n            alert(error.message);\n          }\n        });\n      } else {\n        axios.put(updateProfileImage, fd, config).then(res => {\n          console.log(res); //console.log(res.data._id);\n\n          if (res.data.id !== null) {\n            axios.get(getProfileImage, config).then(newres => {\n              try {\n                let base64Flag = 'data:image/jpeg;base64,';\n                let imageBuffer = newres.data.image.data.data;\n                let imageString = ImageConversion.arrayBufferToBase64(imageBuffer);\n                let convertImageFlag = base64Flag + imageString;\n                this.setState({\n                  img: convertImageFlag\n                });\n              } catch (ex) {\n                if (ex.response) {\n                  if (ex.response.status === 400 || ex.response.status === 401) {\n                    console.log(ex.response.data);\n                    alert(ex.response.data.message);\n                  } else if (ex.response.status === 404) {\n                    alert(\"Not found\");\n                  } else if (ex.response.status === 500) {\n                    alert(ex.response.data.message);\n                  }\n                } else if (ex.request) {\n                  console.log(ex.request);\n                  alert(\"Error Connecting\");\n                } else {\n                  console.log(\"Error\", ex.message);\n                  alert(ex.message);\n                }\n              }\n            }).catch(err => {\n              if (err.response) {\n                if (err.response.status === 400 || err.response.status === 401) {\n                  console.log(err.response.data);\n                  alert(err.response.data.message);\n                } else if (err.response.status === 404) {\n                  alert(\"Not found\");\n                } else if (err.response.status === 500) {\n                  alert(err.response.data.message);\n                }\n              } else if (err.request) {\n                console.log(err.request);\n                alert(\"Error Connecting\");\n              } else {\n                console.log(\"Error\", err.message);\n                alert(err.message);\n              }\n            });\n          }\n        }).catch(error => {\n          if (error.response) {\n            if (error.response.status === 400 || error.response.status === 401) {\n              console.log(error.response.data);\n              alert(error.response.data.message);\n            } else if (error.response.status === 404) {\n              alert(\"Not found\");\n            } else if (error.response.status === 500) {\n              alert(error.response.data.message);\n            }\n          } else if (error.request) {\n            console.log(error.request);\n            alert(\"Error Connecting\");\n          } else {\n            console.log(\"Error\", error.message);\n            alert(error.message);\n          }\n        });\n      } // this.setState = {\n      //     profileImage: null\n      // }\n      //this.props.history.push('/about');\n\n    };\n  }\n\n  componentDidMount() {\n    axios.get(getProfileImage, {\n      headers: {\n        \"x-auth-token\": cookie.getCookie(\"x-auth-token\")\n      }\n    }).then(newres => {\n      try {\n        // console.log(newres);\n        let base64Flag = 'data:image/jpeg;base64,';\n        let imageBuffer = newres.data.image.data.data;\n        let imageString = ImageConversion.arrayBufferToBase64(imageBuffer);\n        let convertImageFlag = base64Flag + imageString;\n        this.setState({\n          img: convertImageFlag,\n          flagImage: true\n        });\n      } catch (ex) {\n        console.log(ex);\n      }\n    }).catch(err => {\n      if (err.response) {\n        if (err.response.status === 400 || err.response.status === 401) {\n          console.log(err.response.data);\n          alert(err.response.data.message);\n        } else if (err.response.status === 404) {\n          alert(\"Not found\");\n        } else if (err.response.status === 500) {\n          alert(err.response.data.message);\n        }\n      } else if (err.request) {\n        console.log(err.request);\n        alert(\"Error Connecting\");\n      } else {\n        console.log(\"Error\", err.message);\n        alert(err.message);\n      }\n    });\n  } // componentDidUpdate(){\n  //     axios.get(`http://localhost:4000/user/get-profile-image`, {headers:{ \n  //         \"x-auth-token\": cookie.getCookie(\"x-auth-token\")\n  //     }})\n  //                     .then(newres => {\n  //                         try {\n  //                             console.log(newres);\n  //                             let base64Flag = 'data:image/jpeg;base64,';\n  //                             let imageBuffer = newres.data.image.data.data;\n  //                             let imageString = ImageConversion.arrayBufferToBase64(imageBuffer);\n  //                             let convertImageFlag = base64Flag + imageString;\n  //                             this.setState({ img : convertImageFlag });\n  //                         } catch (ex) {\n  //                             console.log(ex);\n  //                         }\n  //                     })\n  //                     .catch(err => console.log(err));\n  // }\n\n\n  render() {\n    // const { strImage } = this.state;\n    // console.log(strImage);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-flex flex-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-flex justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fab fa-weebly\",\n      style: {\n        color: \"#33bfaa\",\n        fontSize: \"50px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }), \"elcome\\xA0\", React.createElement(\"i\", {\n      className: \"fas fa-exclamation\",\n      style: {\n        color: \"#33bfaa\",\n        fontSize: \"30px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"d-flex justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.img,\n      style: {\n        maxWidth: \"15%\",\n        cursor: \"pointer\"\n      },\n      className: \"rounded-circle img-fluid img-thumbnail\",\n      id: \"profilePicture\",\n      alt: \"profilePicture\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"d-flex justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card border-primary mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body d-flex justify-content-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.fileSelectedHandler.bind(this),\n      className: \"form-control-file\",\n      id: \"exampleInputFile\",\n      \"aria-describedby\": \"fileHelp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.fileUploadHandler,\n      style: {\n        backgroundColor: \"#33bfaa\"\n      },\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, \"Upload\")))))));\n  }\n\n}\n\nexport default Welcome;","map":{"version":3,"sources":["/home/mehedi/Documents/e-newclient_v-2/e-chain-client/src/Component/Welcome.js"],"names":["React","Component","ImageConversion","axios","cookie","getProfileImage","uploadProfileImage","updateProfileImage","profile","Welcome","state","profileImage","img","flagImage","fileSelectedHandler","event","setState","target","files","ex","console","log","fileUploadHandler","fd","FormData","append","name","config","headers","getCookie","post","then","res","data","id","get","newres","base64Flag","imageBuffer","image","imageString","arrayBufferToBase64","convertImageFlag","response","status","alert","message","request","catch","err","error","put","componentDidMount","render","color","fontSize","maxWidth","cursor","bind","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ImageConversion from './utils/ImageConversion';\nimport './css/Welcome.css';\nimport axios from 'axios';\nimport cookie from './utils/cookie';\nimport {getProfileImage, uploadProfileImage, updateProfileImage} from \"./Url/User\";\nimport profile from './ProImage/profile.png';\n\nclass Welcome extends Component {\n    state = {\n        profileImage: null,\n        img: profile,\n        flagImage: false\n    }\n   \n    fileSelectedHandler = event => {\n        try {\n            this.setState({\n                profileImage: event.target.files[0]\n                });\n        } catch (ex) {\n            console.log(ex);\n        }\n        \n    }\n\n    \n\n\n    componentDidMount(){\n        axios.get(getProfileImage , {headers:{ \n            \"x-auth-token\": cookie.getCookie(\"x-auth-token\")\n        }})\n                        .then(newres => {\n                            try {\n                               // console.log(newres);\n                                let base64Flag = 'data:image/jpeg;base64,';\n                                let imageBuffer = newres.data.image.data.data;\n                                let imageString = ImageConversion.arrayBufferToBase64(imageBuffer);\n                                let convertImageFlag = base64Flag + imageString;\n                                this.setState({ img : convertImageFlag, flagImage: true });\n                            } catch (ex) {\n                                console.log(ex);\n                            }\n\n                        })\n                        .catch(err => {\n                            if (err.response) {\n                                if (err.response.status === 400 || err.response.status === 401) {\n                                    console.log(err.response.data);\n                                    alert(err.response.data.message);\n                                }\n                                else if (err.response.status === 404) {\n                                    alert(\"Not found\");\n                                }\n                                else if (err.response.status === 500) {\n                                    alert(err.response.data.message);\n                                }\n                            }\n                            else if (err.request) {\n                                console.log(err.request);\n                                alert(\"Error Connecting\");\n                            }\n                            else {\n                                console.log(\"Error\", err.message);\n                                alert(err.message);\n                            }\n                        });\n    }\n\n    // componentDidUpdate(){\n    //     axios.get(`http://localhost:4000/user/get-profile-image`, {headers:{ \n    //         \"x-auth-token\": cookie.getCookie(\"x-auth-token\")\n    //     }})\n    //                     .then(newres => {\n    //                         try {\n    //                             console.log(newres);\n    //                             let base64Flag = 'data:image/jpeg;base64,';\n    //                             let imageBuffer = newres.data.image.data.data;\n    //                             let imageString = ImageConversion.arrayBufferToBase64(imageBuffer);\n    //                             let convertImageFlag = base64Flag + imageString;\n    //                             this.setState({ img : convertImageFlag });\n    //                         } catch (ex) {\n    //                             console.log(ex);\n    //                         }\n\n    //                     })\n    //                     .catch(err => console.log(err));\n\n    // }\n   \n\n\n    fileUploadHandler = async () => {\n        \n        const fd = new FormData();\n        fd.append('profileImage', this.state.profileImage, this.state.profileImage.name);\n        console.log(this.state.profileImage);\n        const config = {\n            headers: {\n                \"x-auth-token\": cookie.getCookie(\"x-auth-token\")\n            }\n        }\n\n        if(this.state.flagImage !== true){\n        \n            axios.post(uploadProfileImage, fd, config)\n            .then(res => {\n                console.log(res);\n                //console.log(res.data._id);\n                if (res.data.id !== null) {\n                    axios.get(getProfileImage, config)\n                        .then(newres => {\n\n                            try {\n                                let base64Flag = 'data:image/jpeg;base64,';\n                                let imageBuffer = newres.data.image.data.data;\n                                let imageString = ImageConversion.arrayBufferToBase64(imageBuffer);\n                                let convertImageFlag = base64Flag + imageString;\n                                this.setState({ img : convertImageFlag , flagImage:true });\n                            } catch (ex) {\n                                if (ex.response) {\n                                    if (ex.response.status === 400 || ex.response.status === 401) {\n                                        console.log(ex.response.data);\n                                        alert(ex.response.data.message);\n                                    }\n                                    else if (ex.response.status === 404) {\n                                        alert(\"Not found\");\n                                    }\n                                    else if (ex.response.status === 500) {\n                                        alert(ex.response.data.message);\n                                    }\n                                }\n                                else if (ex.request) {\n                                    console.log(ex.request);\n                                    alert(\"Error Connecting\");\n                                }\n                                else {\n                                    console.log(\"Error\", ex.message);\n                                    alert(ex.message);\n                                }\n                            }\n\n                        })\n                        .catch(err => {\n                            if (err.response) {\n                                if (err.response.status === 400 || err.response.status === 401) {\n                                    console.log(err.response.data);\n                                    alert(err.response.data.message);\n                                }\n                                else if (err.response.status === 404) {\n                                    alert(\"Not found\");\n                                }\n                                else if (err.response.status === 500) {\n                                    alert(err.response.data.message);\n                                }\n                            }\n                            else if (err.request) {\n                                console.log(err.request);\n                                alert(\"Error Connecting\");\n                            }\n                            else {\n                                console.log(\"Error\", err.message);\n                                alert(err.message);\n                            }\n                        });\n                }\n\n\n            })\n            .catch(error => {\n                if (error.response) {\n                    if (error.response.status === 400 || error.response.status === 401) {\n                        console.log(error.response.data);\n                        alert(error.response.data.message);\n                    }\n                    else if (error.response.status === 404) {\n                        alert(\"Not found\");\n                    }\n                    else if (error.response.status === 500) {\n                        alert(error.response.data.message);\n                    }\n                }\n                else if (error.request) {\n                    console.log(error.request);\n                    alert(\"Error Connecting\");\n                }\n                else {\n                    console.log(\"Error\", error.message);\n                    alert(error.message);\n                }\n            });\n       \n        } else{\n\n\n            axios.put(updateProfileImage, fd, config)\n            .then(res => {\n                console.log(res);\n                //console.log(res.data._id);\n                if (res.data.id !== null) {\n                    axios.get(getProfileImage, config)\n                        .then(newres => {\n                            try {\n                                let base64Flag = 'data:image/jpeg;base64,';\n                                let imageBuffer = newres.data.image.data.data;\n                                let imageString = ImageConversion.arrayBufferToBase64(imageBuffer);\n                                let convertImageFlag = base64Flag + imageString;\n                                this.setState({ img : convertImageFlag });\n                            } catch (ex) {\n                                if (ex.response) {\n                                    if (ex.response.status === 400 || ex.response.status === 401) {\n                                        console.log(ex.response.data);\n                                        alert(ex.response.data.message);\n                                    }\n                                    else if (ex.response.status === 404) {\n                                        alert(\"Not found\");\n                                    }\n                                    else if (ex.response.status === 500) {\n                                        alert(ex.response.data.message);\n                                    }\n                                }\n                                else if (ex.request) {\n                                    console.log(ex.request);\n                                    alert(\"Error Connecting\");\n                                }\n                                else {\n                                    console.log(\"Error\", ex.message);\n                                    alert(ex.message);\n                                }\n                            }\n\n                        })\n                        .catch(err => {\n                            if (err.response) {\n                                if (err.response.status === 400 || err.response.status === 401) {\n                                    console.log(err.response.data);\n                                    alert(err.response.data.message);\n                                }\n                                else if (err.response.status === 404) {\n                                    alert(\"Not found\");\n                                }\n                                else if (err.response.status === 500) {\n                                    alert(err.response.data.message);\n                                }\n                            }\n                            else if (err.request) {\n                                console.log(err.request);\n                                alert(\"Error Connecting\");\n                            }\n                            else {\n                                console.log(\"Error\", err.message);\n                                alert(err.message);\n                            }\n                        });\n                }\n\n\n            })\n            .catch(error => {\n                if (error.response) {\n                    if (error.response.status === 400 || error.response.status === 401) {\n                        console.log(error.response.data);\n                        alert(error.response.data.message);\n                    }\n                    else if (error.response.status === 404) {\n                        alert(\"Not found\");\n                    }\n                    else if (error.response.status === 500) {\n                        alert(error.response.data.message);\n                    }\n                }\n                else if (error.request) {\n                    console.log(error.request);\n                    alert(\"Error Connecting\");\n                }\n                else {\n                    console.log(\"Error\", error.message);\n                    alert(error.message);\n                }\n            });\n\n        }\n\n\n\n        \n\n        \n\n\n\n\n\n        // this.setState = {\n        //     profileImage: null\n        // }\n        //this.props.history.push('/about');\n\n    }\n\n    render() {\n        // const { strImage } = this.state;\n        // console.log(strImage);\n        return (\n            <div className=\"container\">\n\n                <div className=\"d-flex flex-column\" >\n                    <div className=\"d-flex justify-content-center\" >\n                        <h1><i className=\"fab fa-weebly\" style={{ color: \"#33bfaa\", fontSize: \"50px\" }}></i>elcome&nbsp;<i className=\"fas fa-exclamation\" style={{ color: \"#33bfaa\", fontSize: \"30px\" }} ></i></h1>\n                    </div>\n                    <div className=\"d-flex justify-content-center\">\n                        <img src={this.state.img}\n                            style={{ maxWidth: \"15%\", cursor: \"pointer\" }}\n                            className=\"rounded-circle img-fluid img-thumbnail\" id=\"profilePicture\" alt=\"profilePicture\" />\n\n                    </div>\n                    <br />\n                    <div className=\"d-flex justify-content-center\">\n                        <div className=\"card border-primary mb-3\">\n                            <div className=\"card-body d-flex justify-content-between\">\n                                <div className=\"\">\n                                    <input type=\"file\" onChange={this.fileSelectedHandler.bind(this)} className=\"form-control-file\" id=\"exampleInputFile\" aria-describedby=\"fileHelp\"></input>\n                                </div>\n                                <div className=\"\">\n                                    <button type=\"button\" onClick={this.fileUploadHandler} style={{ backgroundColor: \"#33bfaa\" }} className=\"btn btn-primary\">Upload</button>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n\n                </div>\n\n\n            </div>\n        );\n    }\n}\n\nexport default Welcome;"]},"metadata":{},"sourceType":"module"}